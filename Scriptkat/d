local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏
local TARGET_FOLDER_NAME = "WorldIgnore"
local PICKUPS_SUBFOLDER = "Pickups"
local TELEPORT_INTERVAL = 0.3
local SCAN_INTERVAL = 1

local localPlayer = Players.LocalPlayer
local character = localPlayer.Character
local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")

print("=== –°–ö–†–ò–ü–¢ –¢–ï–õ–ï–ü–û–†–¢–ê–¶–ò–ò –ó–ê–ü–£–©–ï–ù ===")
print("–†–µ–∂–∏–º: –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π CrateModel –≤ –ø–∞–ø–∫–µ")

-- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –¥–ª—è —Å–∫—Ä–∏–ø—Ç–∞
local SCRIPT_ID = HttpService:GenerateGUID(false):sub(1, 8)
print("ID —Å–∫—Ä–∏–ø—Ç–∞: " .. SCRIPT_ID)

-- –§—É–Ω–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–µ–π –ø–∞–ø–∫–∏
local function safeGetChildren(folder)
    local success, result = pcall(function()
        return folder:GetChildren()
    end)
    
    if success then
        return result
    else
        print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–ø–∫–µ: " .. tostring(result))
        return {}
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Å—Ç–∏ –≤ –º–æ–¥–µ–ª–∏
local function findPrimaryPartInModel(model)
    local success, primaryPart = pcall(function()
        if model.PrimaryPart then
            return model.PrimaryPart
        end
        
        -- –ò—â–µ–º –ª—é–±—É—é —á–∞—Å—Ç—å –≤ –º–æ–¥–µ–ª–∏
        for _, child in ipairs(model:GetChildren()) do
            if child:IsA("BasePart") then
                return child
            end
        end
        
        return nil
    end)
    
    if success and primaryPart then
        return primaryPart
    end
    
    return nil
end

-- –§—É–Ω–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –º–æ–¥–µ–ª–∏
local function safeGetModelPosition(model)
    local success, position = pcall(function()
        -- –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å PrimaryPart —Å–Ω–∞—á–∞–ª–∞
        if model.PrimaryPart then
            return model.PrimaryPart.Position
        end
        
        -- –ò—â–µ–º –ª—é–±—É—é —á–∞—Å—Ç—å –≤ –º–æ–¥–µ–ª–∏
        for _, child in ipairs(model:GetChildren()) do
            if child:IsA("BasePart") then
                return child.Position
            end
        end
        
        return nil
    end)
    
    if success then
        return position
    else
        print("‚ö†Ô∏è –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –º–æ–¥–µ–ª–∏: " .. tostring(position))
        return nil
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ü–µ–ª–µ–≤–æ–π –ø–∞–ø–∫–∏
local function findTargetFolder()
    local success, mainFolder = pcall(function()
        return Workspace:FindFirstChild(TARGET_FOLDER_NAME)
    end)
    
    if not success or not mainFolder then
        print("‚ùå –û—Å–Ω–æ–≤–Ω–∞—è –ø–∞–ø–∫–∞ '" .. TARGET_FOLDER_NAME .. "' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return nil
    end
    
    local success2, pickupsFolder = pcall(function()
        return mainFolder:FindFirstChild(PICKUPS_SUBFOLDER)
    end)
    
    if success2 and pickupsFolder then
        print("‚úÖ –ü–∞–ø–∫–∞ Pickups –Ω–∞–π–¥–µ–Ω–∞")
        return pickupsFolder
    else
        print("‚ùå –ü–æ–¥–ø–∞–ø–∫–∞ '" .. PICKUPS_SUBFOLDER .. "' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return nil
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π –≤ –ø–∞–ø–∫–µ
local function scanFolderModels(folder)
    local models = {}
    
    local children = safeGetChildren(folder)
    print("üìä –ù–∞–π–¥–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –ø–∞–ø–∫–µ: " .. #children)
    
    for _, child in ipairs(children) do
        local success, className = pcall(function()
            return child.ClassName
        end)
        
        if success then
            print("   - " .. child.Name .. " (" .. className .. ")")
            
            if className == "Model" then
                local position = safeGetModelPosition(child)
                if position then
                    table.insert(models, {
                        Model = child,
                        Position = position,
                        Name = child.Name
                    })
                    print("     üìç –ü–æ–∑–∏—Ü–∏—è –º–æ–¥–µ–ª–∏: " .. tostring(position))
                end
            elseif className == "Part" then
                local position = safeGetModelPosition(child)
                if position then
                    table.insert(models, {
                        Model = child,
                        Position = position,
                        Name = child.Name
                    })
                    print("     üìç –ü–æ–∑–∏—Ü–∏—è —á–∞—Å—Ç–∏: " .. tostring(position))
                end
            end
        end
    end
    
    return models
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–ª–∞–≤–Ω–æ–π —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
local function smoothTeleport(targetPosition)
    if not humanoidRootPart or not humanoidRootPart.Parent then
        print("‚ö†Ô∏è –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω")
        return false
    end
    
    if not targetPosition then
        print("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è")
        return false
    end
    
    -- –ü–ª–∞–≤–Ω–æ–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ
    pcall(function()
        local targetCFrame = CFrame.new(targetPosition + Vector3.new(0, 5, 0)) -- –í—ã—à–µ —á—Ç–æ–±—ã –Ω–µ –∑–∞—Å—Ç—Ä—è—Ç—å
        humanoidRootPart.CFrame = targetCFrame
    end)
    
    return true
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
local function monitorAndTeleport()
    print("üîÑ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –º–æ–¥–µ–ª–µ–π...")
    
    while true do
        -- –û–±–Ω–æ–≤–ª—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        if not character or not humanoidRootPart then
            character = localPlayer.Character
            if character then
                humanoidRootPart = character:WaitForChild("HumanoidRootPart", 2)
                if humanoidRootPart then
                    print("üë§ –ü–µ—Ä—Å–æ–Ω–∞–∂ –≥–æ—Ç–æ–≤")
                end
            end
        end
        
        -- –ü–æ–∏—Å–∫ —Ü–µ–ª–µ–≤–æ–π –ø–∞–ø–∫–∏
        local targetFolder = findTargetFolder()
        
        if targetFolder then
            -- –°–∫–∞–Ω–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –≤ –ø–∞–ø–∫–µ
            local models = scanFolderModels(targetFolder)
            
            if #models > 0 then
                local targetModel = models[1]
                print("üéØ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –º–æ–¥–µ–ª—å: " .. targetModel.Name)
                print("üìç –¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É—é—Å—å –∫: " .. tostring(targetModel.Position))
                
                -- –¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è
                if smoothTeleport(targetModel.Position) then
                    print("‚úÖ –£—Å–ø–µ—à–Ω–æ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
                else
                    print("‚ùå –û—à–∏–±–∫–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏")
                end
            else
                print("üì≠ –ú–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–∞–ø–∫–µ")
            end
        else
            print("‚ùå –¶–µ–ª–µ–≤–∞—è –ø–∞–ø–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞")
        end
        
        wait(TELEPORT_INTERVAL)
    end
end

-- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
local function setupCharacterHandling()
    localPlayer.CharacterAdded:Connect(function(newChar)
        character = newChar
        humanoidRootPart = newChar:WaitForChild("HumanoidRootPart")
        print("üîÑ –ü–µ—Ä—Å–æ–Ω–∞–∂ –∏–∑–º–µ–Ω–µ–Ω")
    end)
end

-- –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
print("‚è≥ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...")
setupCharacterHandling()

-- –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –∏–≥—Ä—ã
wait(3)

-- –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
spawn(function()
    local success, err = pcall(monitorAndTeleport)
    if not success then
        print("üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: " .. tostring(err))
    end
end)

print("‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω!")
print("üîç –ò—â—É –º–æ–¥–µ–ª–∏ CrateModel –≤ –ø–∞–ø–∫–µ Pickups")
